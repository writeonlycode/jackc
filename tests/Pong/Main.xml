<class>
<keyword> class </keyword>
<identifier> 
<name> Main </name> 
<category> class </category> 
<index> 0 </index> 
<usage> declaration </usage> 
</identifier>
<symbol> { </symbol>
<subroutineDec>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> 
<name> main </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> declaration </usage> 
</identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<varDec>
<keyword> var </keyword>
<identifier> 
<name> PongGame </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> declaration </usage> 
</identifier>
<identifier> 
<name> game </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> declaration </usage> 
</identifier>
<symbol> ; </symbol>
</varDec>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier> 
<name> PongGame </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> . </symbol>
<identifier> 
<name> newInstance </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier> 
<name> game </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> declaration </usage> 
</identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> 
<name> PongGame </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> . </symbol>
<identifier> 
<name> getInstance </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier> 
<name> game </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> . </symbol>
<identifier> 
<name> run </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> 
<name> game </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> . </symbol>
<identifier> 
<name> dispose </name> 
<category> subroutine </category> 
<index> 0 </index> 
<usage> use </usage> 
</identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<symbol> } </symbol>
</class>
